name: Daily Health Check

on:
  schedule:
    # L√§uft t√§glich um 07:00 UTC (09:00 MESZ / 08:00 MEZ)
    - cron: "0 7 * * *"
  workflow_dispatch: # Erm√∂glicht manuellen Trigger

permissions:
  contents: read
  issues: write

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Code Quality Check
        run: |
          echo "üîç Running code quality checks..."

          echo "üìù Type checking..."
          npm run type-check

          echo "üîß ESLint check..."
          npm run lint

          echo "üé® Prettier check..."
          npm run format:check

          echo "‚úÖ Code quality checks passed"

      - name: Build application
        run: npm run build

      - name: Check GitHub Pages deployment
        run: |
          echo "üîç Checking GitHub Pages health..."

          # Website Response Check
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://dependency-injectors.github.io/WebDevKurs/)

          if [ "$RESPONSE" -eq 200 ]; then
            echo "‚úÖ Website is responding (HTTP $RESPONSE)"
          else
            echo "‚ùå Website health check failed (HTTP $RESPONSE)"
            exit 1
          fi

      - name: Check website content
        run: |
          echo "üîç Checking website content..."

          # Check if main HTML structure is present
          CONTENT=$(curl -s https://dependency-injectors.github.io/WebDevKurs/)

          if echo "$CONTENT" | grep -q "Vite + React"; then
            echo "‚úÖ Page title found"
          else
            echo "‚ùå Page title missing"
            exit 1
          fi

          if echo "$CONTENT" | grep -q 'id="root"'; then
            echo "‚úÖ React root element found"
          else
            echo "‚ùå React root element missing"
            exit 1
          fi

      - name: Check critical routes
        run: |
          echo "üîç Checking critical routes..."

          # Check if JavaScript and CSS bundles are referenced
          CONTENT=$(curl -s https://dependency-injectors.github.io/WebDevKurs/)

          if echo "$CONTENT" | grep -q '/WebDevKurs/assets/' && echo "$CONTENT" | grep -q '\.js'; then
            echo "‚úÖ JavaScript bundle reference found"
          else
            echo "‚ùå JavaScript bundle missing"
            exit 1
          fi

          if echo "$CONTENT" | grep -q '/WebDevKurs/assets/' && echo "$CONTENT" | grep -q '\.css'; then
            echo "‚úÖ CSS bundle reference found"
          else
            echo "‚ùå CSS bundle missing"
            exit 1
          fi

          # Check if the favicon is properly referenced
          if echo "$CONTENT" | grep -q '/WebDevKurs/vite.svg'; then
            echo "‚úÖ Favicon reference found"
          else
            echo "‚ùå Favicon reference missing"
            exit 1
          fi

      - name: Run basic tests
        run: |
          echo "üß™ Running basic tests..."
          npm test

      - name: Check build artifacts
        run: |
          echo "üîç Checking build artifacts..."

          if [ -d "dist" ]; then
            echo "‚úÖ Build directory exists"
          else
            echo "‚ùå Build directory missing"
            exit 1
          fi

          if [ -f "dist/index.html" ]; then
            echo "‚úÖ index.html exists"
          else
            echo "‚ùå index.html missing"
            exit 1
          fi

          # Check if assets exist
          ASSETS_COUNT=$(find dist -name "*.js" -o -name "*.css" | wc -l)
          if [ "$ASSETS_COUNT" -gt 0 ]; then
            echo "‚úÖ Build assets found ($ASSETS_COUNT files)"
          else
            echo "‚ùå No build assets found"
            exit 1
          fi

      - name: Performance check
        run: |
          echo "‚ö° Basic performance check..."

          START_TIME=$(date +%s%3N)
          curl -s https://dependency-injectors.github.io/WebDevKurs/ > /dev/null
          END_TIME=$(date +%s%3N)

          RESPONSE_TIME=$((END_TIME - START_TIME))
          echo "üìä Response time: ${RESPONSE_TIME}ms"

          if [ "$RESPONSE_TIME" -lt 5000 ]; then
            echo "‚úÖ Good response time"
          elif [ "$RESPONSE_TIME" -lt 10000 ]; then
            echo "‚ö†Ô∏è Acceptable response time"
          else
            echo "‚ùå Slow response time"
            exit 1
          fi

      - name: Summary
        if: success()
        run: |
          echo "üéâ Health Check Summary:"
          echo "‚úÖ Website is accessible"
          echo "‚úÖ Content is loading correctly"
          echo "‚úÖ Build process working"
          echo "‚úÖ Tests passing"
          echo "‚úÖ Performance acceptable"
          echo ""
          echo "üåê Site: https://dependency-injectors.github.io/WebDevKurs/"
          echo "‚è∞ Checked at: $(date)"

      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® Health Check Failed - ${new Date().toISOString().split('T')[0]}`;
            const body = `## Health Check Failure Report

            **Date:** ${new Date().toISOString()}
            **Workflow:** ${context.workflow}
            **Run ID:** ${context.runId}

            ### ‚ùå Health check failed

            The daily health check for our GitHub Pages deployment has failed.

            **Please check:**
            - [ ] GitHub Pages deployment status
            - [ ] Website accessibility
            - [ ] Build process
            - [ ] Content rendering

            **Links:**
            - [Failed Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [Live Site](https://dependency-injectors.github.io/WebDevKurs/)

            ---
            *This issue was automatically created by the Health Check workflow.*`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['health-check', 'bug', 'automated']
            });
